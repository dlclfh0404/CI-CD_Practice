name: Auto Deploy To-Do App + Codee Report

on:
  push:
    branches:
      - main
      # main 브랜치에 push될 때 자동 실행

jobs:
  deploy:
    runs-on: self-hosted
    # 내 서버(VM)에 설치된 GitHub Runner 사용

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # GitHub 리포지토리 코드를 체크아웃

      - name: Install dependencies (bear, gcc)
        run: |
          sudo apt update
          sudo apt install -y bear gcc
        # bear (컴파일 감지) + gcc (C 컴파일러) 설치

      - name: Build C project with bear
        run: |
          cd src
          bear -- make
        # src/ 폴더에서 bear로 컴파일 감시 → compile_commands.json 생성

      - name: Generate Codee HTML report
        run: |
          codee report -p src/compile_commands.json --out-dir out
        # Codee 리포트를 out/ 폴더에 생성

      - name: Build Docker Image
        run: docker build --no-cache -t codee-report .
        # Dockerfile로 새 이미지 생성

      - name: Stop previous todo-app container (if exists)
        run: |
          docker stop todo-app || true
          docker rm todo-app || true
        # todo-app 컨테이너 있으면 중지 + 삭제 (없어도 무시)

      - name: Stop previous codee-report container (if exists)
        run: |
          docker stop codee-report || true
          docker rm codee-report || true
        # codee-report 컨테이너 있으면 중지 + 삭제 (없어도 무시)

      - name: Run new todo-app container
        run: |
          docker run -d -p 27080:80 --name todo-app codee-report
        # 27080포트에 todo-app 컨테이너 실행
        # 같은 이미지를 사용하지만 포트만 다르게 설정

      - name: Run new codee-report container
        run: |
          docker run -d -p 80:80 --name codee-report codee-report
        # 80포트에 codee-report 컨테이너 실행

